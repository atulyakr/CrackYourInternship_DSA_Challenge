/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    typedef unsigned long long ll;
    int widthOfBinaryTree(TreeNode* root) {
        queue<pair<TreeNode*,long  long>> qw;

        ll maxi=0;
        qw.push({root,0});
        while(!qw.empty())
        {
            ll L=qw.front().second;
            ll R=qw.back().second;

            maxi =max(maxi,R-L+1);

            ll n=qw.size();
            while(n--)
            {
                TreeNode* curr=qw.front().first;
                ll idx=qw.front().second;
                qw.pop();
                if(curr->left!=NULL)
                {
                    qw.push({curr->left,2*idx+1});
                }

                if(curr->right!=NULL)
                {
                    qw.push({curr->right,2*idx+2});
                }
                
            }
           
        }
        return maxi;
    }
};
