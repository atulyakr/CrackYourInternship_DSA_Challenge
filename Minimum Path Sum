
class Solution {
public:
    int solve(vector<vector<int>>&grid,int i,int j,vector<vector<int>>&dp){
        if(i==grid.size() || j==grid[0].size())
            return 0;

        if(dp[i][j]!=-1)
            return dp[i][j];
        if(i==grid.size()-1)
            return grid[i][j]+solve(grid,i,j+1,dp);

        if(j==grid[0].size()-1)
            return grid[i][j]+solve(grid,i+1,j,dp);
        
        return dp[i][j]=min(grid[i][j]+solve(grid,i,j+1,dp),
                            grid[i][j]+solve(grid,i+1,j,dp));
    }
    int minPathSum(vector<vector<int>>& grid) {
        int m=grid.size();
        int n=grid[0].size();
        vector<vector<int>>dp(m,vector<int>(n,-1));
        return solve(grid,0,0,dp);
    }
};
