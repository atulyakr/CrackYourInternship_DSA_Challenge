
class Solution {
public:
    bool validSquare(vector<int>& p1, vector<int>& p2, vector<int>& p3, vector<int>& p4) {
       // map<int,int>mp;
        set<int>st;
      int a=(pow((p1[0]-p2[0]),2)+pow((p1[1]-p2[1]),2));
      int b=(pow((p1[0]-p3[0]),2)+pow((p1[1]-p3[1]),2));
      int c=(pow((p1[0]-p4[0]),2)+pow((p1[1]-p4[1]),2));
      int d=(pow((p2[0]-p4[0]),2)+pow((p2[1]-p4[1]),2));
      int e=(pow((p3[0]-p2[0]),2)+pow((p3[1]-p2[1]),2));
      int f=(pow((p3[0]-p4[0]),2)+pow((p3[1]-p4[1]),2));
      st.insert(a);
       st.insert(b);
        st.insert(c);
        st.insert(d);
         st.insert(e);
          st.insert(f);
          return (!st.count(0) && st.size() == 2);

    }
};
